basePath: /
definitions:
  helper.HTTPResponse:
    properties:
      data: {}
      error_msg:
        type: string
      limit:
        type: integer
      message:
        type: string
      page:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  models.Banner:
    properties:
      end_date:
        example: "2024-03-31"
        type: string
      image:
        example: /images/banner1.png
        type: string
      path_page:
        example: /spring-sale
        type: string
      published:
        example: true
        type: boolean
      release_date:
        example: "2024-03-01"
        type: string
      title:
        example: Spring Sale 2024
        type: string
      type:
        example:
        - '["seasonal"'
        - ' "promo"]'
        items:
          type: string
        type: array
    type: object
  models.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  models.Order:
    properties:
      payment_method:
        example: credit_card
        type: string
      shipping_address:
        example: 123 Main St
        type: string
      status:
        example: pending
        type: string
      total_amount:
        example: 150.75
        type: number
      user_id:
        example: 1
        type: integer
    required:
    - payment_method
    - status
    - total_amount
    - user_id
    type: object
  models.Promotion:
    properties:
      description:
        example: Special holiday discounts
        type: string
      discount:
        example:
        - '[{"value":10'
        - '"type":"percentage"}]'
        items:
          type: string
        type: array
      end_date:
        example: "2024-12-31"
        type: string
      name:
        example: Holiday Sale
        type: string
      product_name:
        example:
        - '["Smartphone"'
        - ' "Laptop"]'
        items:
          type: string
        type: array
      published:
        example: true
        type: boolean
      quota:
        example: 100
        type: integer
      start_date:
        example: "2024-12-01"
        type: string
      status:
        example: true
        type: boolean
      type:
        example:
        - '["discount"'
        - ' "bundle"]'
        items:
          type: string
        type: array
    required:
    - end_date
    - name
    - start_date
    type: object
  models.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://example.com/support
  description: API for managing Ecommerce
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Dashboard Ecommerce Team 2
  version: "1.0"
paths:
  /api/banner:
    delete:
      consumes:
      - multipart/form-data
      description: Remove a banner by its ID
      parameters:
      - description: Role
        in: header
        name: Authorization
        required: true
        type: string
      - description: Banner ID
        in: formData
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted banner
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Invalid banner ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to delete banner
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a banner
      tags:
      - Banner
    get:
      consumes:
      - multipart/form-data
      description: Retrieve a specific banner by its ID
      parameters:
      - description: Banner ID
        in: formData
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved banner
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Banner'
              type: object
        "400":
          description: Invalid banner ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to retrieve banner
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get banner by ID
      tags:
      - Banner
    put:
      consumes:
      - multipart/form-data
      description: Toggle the published status of a banner
      parameters:
      - description: Banner ID
        in: formData
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated published banner
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Banner'
              type: object
        "400":
          description: Invalid banner ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to update banner
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update banner published status
      tags:
      - Banner
  /api/create-banner:
    post:
      consumes:
      - multipart/form-data
      description: Create a new banner with image upload
      parameters:
      - description: Banner Title
        in: formData
        name: title
        required: true
        type: string
      - description: Banner Description
        in: formData
        name: description
        type: string
      - description: Banner Image
        in: formData
        name: image_path
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created banner
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Banner'
              type: object
        "400":
          description: Invalid data input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to upload image or create banner
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new banner
      tags:
      - Banner
  /api/promotion:
    get:
      description: Retrieve a specific promotion by its ID
      parameters:
      - description: Promotion ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved promotion
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Promotion'
                  type: array
              type: object
        "400":
          description: Invalid promotion ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get promotion by ID
      tags:
      - Promotions
  /api/promotions:
    delete:
      description: Delete a specific promotion by its ID
      parameters:
      - description: Role
        in: header
        name: Authorization
        required: true
        type: string
      - description: Promotion ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted promotion
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Invalid promotion ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden - Insufficient privileges
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to delete promotion
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a promotion
      tags:
      - Promotions
    get:
      description: Retrieve a list of all promotions
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved promotions
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Promotion'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all promotions
      tags:
      - Promotions
    post:
      consumes:
      - application/json
      description: Create a new promotion with detailed information
      parameters:
      - description: Promotion Details
        in: body
        name: promotion
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/models.SuccessResponse'
          - properties:
              data:
                items:
                  $ref: '#/definitions/models.Promotion'
                type: array
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created promotion
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Promotion'
                  type: array
              type: object
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to create promotion
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new promotion
      tags:
      - Promotions
  /api/promotions/status:
    put:
      description: Toggle the published status of a specific promotion
      parameters:
      - description: Promotion ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated promotion status
          schema:
            allOf:
            - $ref: '#/definitions/models.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Promotion'
                  type: array
              type: object
        "400":
          description: Invalid promotion ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to update promotion
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update promotion published status
      tags:
      - Promotions
  /api/v1/orders:
    get:
      consumes:
      - application/json
      description: Get a list of all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: Get all orders
      tags:
      - orders
  /api/v1/orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted the order
          schema:
            $ref: '#/definitions/helper.HTTPResponse'
        "400":
          description: Invalid order ID
          schema:
            $ref: '#/definitions/helper.HTTPResponse'
        "500":
          description: Failed to delete the order
          schema:
            $ref: '#/definitions/helper.HTTPResponse'
      summary: Delete order by ID
      tags:
      - orders
    get:
      consumes:
      - application/json
      description: Get a single order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Get order by ID
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update the status of an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Order Status
        example: '"shipped"'
        in: body
        name: status
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated the order status
          schema:
            $ref: '#/definitions/helper.HTTPResponse'
        "400":
          description: Invalid order ID
          schema:
            $ref: '#/definitions/helper.HTTPResponse'
        "500":
          description: Failed to update order status
          schema:
            $ref: '#/definitions/helper.HTTPResponse'
      summary: Update order status
      tags:
      - Orders
  /api/v1/orders/{id}/details:
    get:
      consumes:
      - application/json
      description: Get the details of an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.HTTPResponse'
        "400":
          description: Invalid order ID
          schema:
            $ref: '#/definitions/helper.HTTPResponse'
        "500":
          description: Failed to fetch order details
          schema:
            $ref: '#/definitions/helper.HTTPResponse'
      summary: Get order detail by ID
      tags:
      - orders
securityDefinitions:
  Authentication:
    in: header
    name: Authorization
    type: apiKey
  UserID:
    in: header
    name: User-ID
    type: apiKey
swagger: "2.0"
