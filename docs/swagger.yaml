basePath: /
definitions:
  helper.HTTPResponse:
    properties:
      data: {}
      error_msg:
        type: string
      limit:
        type: integer
      message:
        type: string
      page:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  models.CheckEmailRequest:
    properties:
      email:
        example: johndoe@example
        type: string
    required:
    - email
    type: object
  models.LoginRequest:
    properties:
      email:
        example: johndoe@example.com
        type: string
      password:
        example: password123
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  models.Order:
    properties:
      payment_method:
        example: credit_card
        type: string
      shipping_address:
        example: 123 Main St
        type: string
      status:
        example: pending
        type: string
      total_amount:
        example: 150.75
        type: number
      user_id:
        example: 1
        type: integer
    required:
    - payment_method
    - status
    - total_amount
    - user_id
    type: object
  models.OrderDetailResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      order:
        $ref: '#/definitions/models.Order'
    type: object
  models.OrderItem:
    properties:
      order_id:
        example: 1
        type: integer
      price:
        example: 75
        type: number
      product_id:
        example: 101
        type: integer
      quantity:
        example: 2
        type: integer
      total:
        type: number
    required:
    - order_id
    - price
    - product_id
    - quantity
    - total
    type: object
  models.RegisterRequest:
    properties:
      email:
        example: johndoe@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: password123
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://example.com/support
  description: API for managing Ecommerce
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Dashboard Ecommerce Team 2
  version: "1.0"
paths: {}
securityDefinitions:
  Authentication:
    in: header
    name: Authorization
    type: apiKey
  UserID:
    in: header
    name: User-ID
    type: apiKey
swagger: "2.0"
